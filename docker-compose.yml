version: "3"
services:
  go-template:
    build: .
    environment:
       RABBITMQ_URL: "amqp://rabbitmq"
    container_name: go-template
    links:
      - rabbitmq

  rabbitmq:
    image: rabbitmq:3.7.8-management-alpine
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - ./backend-data/rabbitmq:/var/lib/rabbitmq
    container_name: rabbitmq

  etcd:
    image: bitnami/etcd:3
    ports:
      - 2379:2379
      - 2380:2380
    environment:
      - ALLOW_NONE_AUTHENTICATION=yes
    volumes:
      - ./backend-data/etcd:/bitnami
    container_name: etcd

  kafka:
    image: obsidiandynamics/kafka
    restart: "no"
    ports:
      - "2181:2181"
      - "9092:9092"
    environment:
      KAFKA_LISTENERS: "INTERNAL://:29092,EXTERNAL://:9092"
      KAFKA_ADVERTISED_LISTENERS: "INTERNAL://kafka:29092,EXTERNAL://localhost:9092"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT"
      KAFKA_INTER_BROKER_LISTENER_NAME: "INTERNAL"
      KAFKA_ZOOKEEPER_SESSION_TIMEOUT: "6000"
      KAFKA_RESTART_ATTEMPTS: "10"
      KAFKA_RESTART_DELAY: "5"
      ZOOKEEPER_AUTOPURGE_PURGE_INTERVAL: "0"

  # Kafka UI
  kafdrop:
    image: obsidiandynamics/kafdrop
    restart: "no"
    ports:
      - "9000:9000"
    environment:
      KAFKA_BROKERCONNECT: "kafka:29092"
      JVM_OPTS: "-Xms16M -Xmx48M -Xss180K -XX:-TieredCompilation -XX:+UseStringDeduplication -noverify"
    depends_on:
      - "kafka"

  postgres:
    image: bitnami/postgresql:10.13.0
    ports:
      - "5432:5432"
    volumes:
      - ./backend-data/postgres:/bitnami/postgresql
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    container_name: postgres