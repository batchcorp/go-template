// Code generated by protoc-gen-go. DO NOT EDIT.
// source: intake.proto

package pbevents

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Intake_Type int32

const (
	Intake_UNKNOWN Intake_Type = 0
	Intake_JSON    Intake_Type = 1
	Intake_YAML    Intake_Type = 2
	Intake_XML     Intake_Type = 3
)

var Intake_Type_name = map[int32]string{
	0: "UNKNOWN",
	1: "JSON",
	2: "YAML",
	3: "XML",
}

var Intake_Type_value = map[string]int32{
	"UNKNOWN": 0,
	"JSON":    1,
	"YAML":    2,
	"XML":     3,
}

func (x Intake_Type) String() string {
	return proto.EnumName(Intake_Type_name, int32(x))
}

func (Intake_Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_10c1cd425838d617, []int{0, 0}
}

type Intake_Transport int32

const (
	Intake_HTTP Intake_Transport = 0
	Intake_TCP  Intake_Transport = 1
	Intake_UDP  Intake_Transport = 2
)

var Intake_Transport_name = map[int32]string{
	0: "HTTP",
	1: "TCP",
	2: "UDP",
}

var Intake_Transport_value = map[string]int32{
	"HTTP": 0,
	"TCP":  1,
	"UDP":  2,
}

func (x Intake_Transport) String() string {
	return proto.EnumName(Intake_Transport_name, int32(x))
}

func (Intake_Transport) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_10c1cd425838d617, []int{0, 1}
}

// This type is used during data collection -- the collector emits it to the
// inbound queue which is then consumed by the writer.
type Intake struct {
	Context              *Intake_Context   `protobuf:"bytes,1,opt,name=context,proto3" json:"context,omitempty"`
	Type                 Intake_Type       `protobuf:"varint,2,opt,name=type,proto3,enum=pbevents.Intake_Type" json:"type,omitempty"`
	Transport            Intake_Transport  `protobuf:"varint,3,opt,name=transport,proto3,enum=pbevents.Intake_Transport" json:"transport,omitempty"`
	Method               string            `protobuf:"bytes,4,opt,name=method,proto3" json:"method,omitempty"`
	Headers              map[string]string `protobuf:"bytes,5,rep,name=headers,proto3" json:"headers,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Path                 string            `protobuf:"bytes,6,opt,name=path,proto3" json:"path,omitempty"`
	Body                 []byte            `protobuf:"bytes,7,opt,name=body,proto3" json:"body,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Intake) Reset()         { *m = Intake{} }
func (m *Intake) String() string { return proto.CompactTextString(m) }
func (*Intake) ProtoMessage()    {}
func (*Intake) Descriptor() ([]byte, []int) {
	return fileDescriptor_10c1cd425838d617, []int{0}
}

func (m *Intake) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Intake.Unmarshal(m, b)
}
func (m *Intake) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Intake.Marshal(b, m, deterministic)
}
func (m *Intake) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Intake.Merge(m, src)
}
func (m *Intake) XXX_Size() int {
	return xxx_messageInfo_Intake.Size(m)
}
func (m *Intake) XXX_DiscardUnknown() {
	xxx_messageInfo_Intake.DiscardUnknown(m)
}

var xxx_messageInfo_Intake proto.InternalMessageInfo

func (m *Intake) GetContext() *Intake_Context {
	if m != nil {
		return m.Context
	}
	return nil
}

func (m *Intake) GetType() Intake_Type {
	if m != nil {
		return m.Type
	}
	return Intake_UNKNOWN
}

func (m *Intake) GetTransport() Intake_Transport {
	if m != nil {
		return m.Transport
	}
	return Intake_HTTP
}

func (m *Intake) GetMethod() string {
	if m != nil {
		return m.Method
	}
	return ""
}

func (m *Intake) GetHeaders() map[string]string {
	if m != nil {
		return m.Headers
	}
	return nil
}

func (m *Intake) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *Intake) GetBody() []byte {
	if m != nil {
		return m.Body
	}
	return nil
}

// Info indicating which client the intake message belongs to, what collection
// config the writer should use and debug info.
type Intake_Context struct {
	Client               *Client  `protobuf:"bytes,1,opt,name=client,proto3" json:"client,omitempty"`
	Collect              *Collect `protobuf:"bytes,2,opt,name=collect,proto3" json:"collect,omitempty"`
	Info                 *Info    `protobuf:"bytes,3,opt,name=info,proto3" json:"info,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Intake_Context) Reset()         { *m = Intake_Context{} }
func (m *Intake_Context) String() string { return proto.CompactTextString(m) }
func (*Intake_Context) ProtoMessage()    {}
func (*Intake_Context) Descriptor() ([]byte, []int) {
	return fileDescriptor_10c1cd425838d617, []int{0, 0}
}

func (m *Intake_Context) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Intake_Context.Unmarshal(m, b)
}
func (m *Intake_Context) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Intake_Context.Marshal(b, m, deterministic)
}
func (m *Intake_Context) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Intake_Context.Merge(m, src)
}
func (m *Intake_Context) XXX_Size() int {
	return xxx_messageInfo_Intake_Context.Size(m)
}
func (m *Intake_Context) XXX_DiscardUnknown() {
	xxx_messageInfo_Intake_Context.DiscardUnknown(m)
}

var xxx_messageInfo_Intake_Context proto.InternalMessageInfo

func (m *Intake_Context) GetClient() *Client {
	if m != nil {
		return m.Client
	}
	return nil
}

func (m *Intake_Context) GetCollect() *Collect {
	if m != nil {
		return m.Collect
	}
	return nil
}

func (m *Intake_Context) GetInfo() *Info {
	if m != nil {
		return m.Info
	}
	return nil
}

func init() {
	proto.RegisterEnum("pbevents.Intake_Type", Intake_Type_name, Intake_Type_value)
	proto.RegisterEnum("pbevents.Intake_Transport", Intake_Transport_name, Intake_Transport_value)
	proto.RegisterType((*Intake)(nil), "pbevents.Intake")
	proto.RegisterMapType((map[string]string)(nil), "pbevents.Intake.HeadersEntry")
	proto.RegisterType((*Intake_Context)(nil), "pbevents.Intake.Context")
}

func init() { proto.RegisterFile("intake.proto", fileDescriptor_10c1cd425838d617) }

var fileDescriptor_10c1cd425838d617 = []byte{
	// 399 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x92, 0xd1, 0x6f, 0x94, 0x40,
	0x10, 0xc6, 0xbb, 0x07, 0x85, 0x32, 0x9c, 0xcd, 0x3a, 0x51, 0xb3, 0x21, 0x31, 0x21, 0xbc, 0x88,
	0x31, 0x21, 0x06, 0x1f, 0x6c, 0xfa, 0x66, 0x4e, 0x93, 0xaa, 0x2d, 0xbd, 0xac, 0x34, 0xea, 0x23,
	0xc7, 0x6d, 0x73, 0x97, 0x22, 0x4b, 0xb8, 0xb5, 0x91, 0x77, 0xff, 0x28, 0xff, 0x3c, 0xb3, 0xbb,
	0xd0, 0x5e, 0x72, 0x6f, 0xdf, 0xcc, 0xf7, 0x63, 0x60, 0xbe, 0x01, 0xe6, 0xdb, 0x56, 0x55, 0x77,
	0x22, 0xeb, 0x7a, 0xa9, 0x24, 0x9e, 0x74, 0x2b, 0x71, 0x2f, 0x5a, 0xb5, 0x8b, 0xe6, 0x75, 0xb3,
	0x15, 0xad, 0xb2, 0xfd, 0xe8, 0x49, 0x2d, 0x9b, 0x46, 0xd4, 0x53, 0x09, 0xdb, 0xf6, 0x56, 0x5a,
	0x9d, 0xfc, 0x73, 0xc1, 0xfb, 0x6c, 0x66, 0x60, 0x0e, 0x7e, 0x2d, 0x5b, 0x25, 0xfe, 0x28, 0x46,
	0x62, 0x92, 0x86, 0x39, 0xcb, 0xa6, 0x79, 0x99, 0x45, 0xb2, 0x85, 0xf5, 0xf9, 0x04, 0xe2, 0x6b,
	0x70, 0xd5, 0xd0, 0x09, 0x36, 0x8b, 0x49, 0x7a, 0x9a, 0x3f, 0x3f, 0x78, 0xa0, 0x1c, 0x3a, 0xc1,
	0x0d, 0x82, 0x67, 0x10, 0xa8, 0xbe, 0x6a, 0x77, 0x9d, 0xec, 0x15, 0x73, 0x0c, 0x1f, 0x1d, 0xf2,
	0x13, 0xc1, 0x1f, 0x61, 0x7c, 0x01, 0xde, 0x2f, 0xa1, 0x36, 0x72, 0xcd, 0xdc, 0x98, 0xa4, 0x01,
	0x1f, 0x2b, 0x7c, 0x0f, 0xfe, 0x46, 0x54, 0x6b, 0xd1, 0xef, 0xd8, 0x71, 0xec, 0xa4, 0x61, 0xfe,
	0xf2, 0x60, 0xde, 0x85, 0xf5, 0x3f, 0xb5, 0xaa, 0x1f, 0xf8, 0x44, 0x23, 0x82, 0xdb, 0x55, 0x6a,
	0xc3, 0x3c, 0x33, 0xce, 0x68, 0xdd, 0x5b, 0xc9, 0xf5, 0xc0, 0xfc, 0x98, 0xa4, 0x73, 0x6e, 0x74,
	0xf4, 0x97, 0x80, 0x3f, 0xae, 0x8c, 0x29, 0x78, 0x36, 0xd3, 0x31, 0x1c, 0xfa, 0xf8, 0xae, 0x85,
	0xe9, 0xf3, 0xd1, 0xc7, 0x37, 0x3a, 0x47, 0x93, 0xb7, 0x89, 0x25, 0xcc, 0x9f, 0xee, 0xa1, 0xd6,
	0xe0, 0x13, 0x81, 0x09, 0xb8, 0xfa, 0x1a, 0x26, 0x90, 0x30, 0x3f, 0xdd, 0x5f, 0xe0, 0x56, 0x72,
	0xe3, 0x45, 0xe7, 0x30, 0xdf, 0xdf, 0x03, 0x29, 0x38, 0x77, 0x62, 0x30, 0xdf, 0x11, 0x70, 0x2d,
	0xf1, 0x19, 0x1c, 0xdf, 0x57, 0xcd, 0x6f, 0x7b, 0x87, 0x80, 0xdb, 0xe2, 0x7c, 0x76, 0x46, 0x92,
	0xb7, 0xe0, 0xea, 0x1b, 0x60, 0x08, 0xfe, 0x4d, 0xf1, 0xb5, 0xb8, 0xfe, 0x5e, 0xd0, 0x23, 0x3c,
	0x01, 0xf7, 0xcb, 0xb7, 0xeb, 0x82, 0x12, 0xad, 0x7e, 0x7e, 0xb8, 0xba, 0xa4, 0x33, 0xf4, 0xc1,
	0xf9, 0x71, 0x75, 0x49, 0x9d, 0xe4, 0x15, 0x04, 0x0f, 0x57, 0xd0, 0xfe, 0x45, 0x59, 0x2e, 0xe9,
	0x91, 0xf6, 0xcb, 0xc5, 0x92, 0x12, 0x2d, 0x6e, 0x3e, 0x2e, 0xe9, 0x6c, 0xe5, 0x99, 0x3f, 0xe8,
	0xdd, 0xff, 0x00, 0x00, 0x00, 0xff, 0xff, 0x92, 0x8e, 0xe4, 0x56, 0x84, 0x02, 0x00, 0x00,
}
