// Code generated by protoc-gen-go. DO NOT EDIT.
// source: collect.proto

package events

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// This type is used to convey info about a collection request; it includes
// auth details that enables the collector to associate intake events with a
// particular team's collection request.
type Collect struct {
	Id     string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Token  string  `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	Schema *Schema `protobuf:"bytes,3,opt,name=schema,proto3" json:"schema,omitempty"`
	Lake   *Lake   `protobuf:"bytes,4,opt,name=lake,proto3" json:"lake,omitempty"`
	// Used by collectors to determine what topic events will be written to
	// _until_ a parquet schema is figured out by schema-manager.
	XCollectorHsbTopic   string   `protobuf:"bytes,5,opt,name=_collector_hsb_topic,json=CollectorHsbTopic,proto3" json:"_collector_hsb_topic,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Collect) Reset()         { *m = Collect{} }
func (m *Collect) String() string { return proto.CompactTextString(m) }
func (*Collect) ProtoMessage()    {}
func (*Collect) Descriptor() ([]byte, []int) {
	return fileDescriptor_37ca5d531a1e5e54, []int{0}
}

func (m *Collect) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Collect.Unmarshal(m, b)
}
func (m *Collect) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Collect.Marshal(b, m, deterministic)
}
func (m *Collect) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Collect.Merge(m, src)
}
func (m *Collect) XXX_Size() int {
	return xxx_messageInfo_Collect.Size(m)
}
func (m *Collect) XXX_DiscardUnknown() {
	xxx_messageInfo_Collect.DiscardUnknown(m)
}

var xxx_messageInfo_Collect proto.InternalMessageInfo

func (m *Collect) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Collect) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *Collect) GetSchema() *Schema {
	if m != nil {
		return m.Schema
	}
	return nil
}

func (m *Collect) GetLake() *Lake {
	if m != nil {
		return m.Lake
	}
	return nil
}

func (m *Collect) GetXCollectorHsbTopic() string {
	if m != nil {
		return m.XCollectorHsbTopic
	}
	return ""
}

func init() {
	proto.RegisterType((*Collect)(nil), "events.Collect")
}

func init() { proto.RegisterFile("collect.proto", fileDescriptor_37ca5d531a1e5e54) }

var fileDescriptor_37ca5d531a1e5e54 = []byte{
	// 222 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x34, 0x8f, 0xb1, 0x4e, 0xc3, 0x30,
	0x10, 0x86, 0xe5, 0xd0, 0x06, 0x71, 0x94, 0x4a, 0x58, 0x1d, 0xac, 0x4e, 0x11, 0x03, 0xea, 0x80,
	0x6c, 0x09, 0xde, 0x80, 0x2e, 0x0c, 0x4c, 0x81, 0x89, 0x25, 0xb2, 0x1d, 0xab, 0xb6, 0xe2, 0xf6,
	0xa2, 0xd8, 0xe5, 0xa1, 0x78, 0x4a, 0x54, 0x5f, 0xb3, 0xd9, 0xff, 0xf7, 0xdb, 0xdf, 0x1d, 0x3c,
	0x58, 0x8c, 0xd1, 0xd9, 0x2c, 0xc7, 0x09, 0x33, 0xf2, 0xda, 0xfd, 0xba, 0x53, 0x4e, 0xdb, 0x55,
	0xb2, 0xde, 0x1d, 0x35, 0xa5, 0x5b, 0x88, 0x7a, 0x70, 0x74, 0x7e, 0xfa, 0x63, 0x70, 0xbb, 0xa7,
	0x37, 0x7c, 0x0d, 0x55, 0xe8, 0x05, 0x6b, 0xd8, 0xee, 0xae, 0xad, 0x42, 0xcf, 0x37, 0xb0, 0xcc,
	0x38, 0xb8, 0x93, 0xa8, 0x4a, 0x44, 0x17, 0xfe, 0x0c, 0x35, 0xfd, 0x26, 0x6e, 0x1a, 0xb6, 0xbb,
	0x7f, 0x5d, 0x4b, 0x92, 0xc8, 0xaf, 0x92, 0xb6, 0x57, 0xca, 0x1b, 0x58, 0x5c, 0x3c, 0x62, 0x51,
	0x5a, 0xab, 0xb9, 0xf5, 0xa9, 0x07, 0xd7, 0x16, 0xc2, 0x15, 0x6c, 0xba, 0xeb, 0xbc, 0x38, 0x75,
	0x3e, 0x99, 0x2e, 0xe3, 0x18, 0xac, 0x58, 0x16, 0xdd, 0xe3, 0x7e, 0x46, 0x1f, 0xc9, 0x7c, 0x5f,
	0xc0, 0xbb, 0xfc, 0x79, 0x39, 0x84, 0xec, 0xcf, 0x46, 0x5a, 0x3c, 0x2a, 0xa3, 0xb3, 0xf5, 0x16,
	0xa7, 0x51, 0x91, 0x31, 0x29, 0x73, 0x0e, 0xb1, 0x57, 0x07, 0x54, 0xe4, 0x32, 0x75, 0xd9, 0xf1,
	0xed, 0x3f, 0x00, 0x00, 0xff, 0xff, 0xcf, 0x86, 0x2f, 0xc9, 0x16, 0x01, 0x00, 0x00,
}
