// Code generated by protoc-gen-go. DO NOT EDIT.
// source: destination.proto

package events

import (
	fmt "fmt"
	destinations "github.com/batchcorp/schemas/build/go/events/destinations"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Destination_Type int32

const (
	Destination_UNSET Destination_Type = 0
	Destination_HTTP  Destination_Type = 1
	Destination_AMQP  Destination_Type = 2
	Destination_SQS   Destination_Type = 3
	Destination_KAFKA Destination_Type = 4
)

var Destination_Type_name = map[int32]string{
	0: "UNSET",
	1: "HTTP",
	2: "AMQP",
	3: "SQS",
	4: "KAFKA",
}

var Destination_Type_value = map[string]int32{
	"UNSET": 0,
	"HTTP":  1,
	"AMQP":  2,
	"SQS":   3,
	"KAFKA": 4,
}

func (x Destination_Type) String() string {
	return proto.EnumName(Destination_Type_name, int32(x))
}

func (Destination_Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_a55fe39993114776, []int{0, 0}
}

type Destination struct {
	Id        string           `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Type      Destination_Type `protobuf:"varint,2,opt,name=type,proto3,enum=events.Destination_Type" json:"type,omitempty"`
	Notes     string           `protobuf:"bytes,3,opt,name=notes,proto3" json:"notes,omitempty"`
	CreatedBy string           `protobuf:"bytes,4,opt,name=created_by,json=createdBy,proto3" json:"created_by,omitempty"`
	// Types that are valid to be assigned to Dest:
	//	*Destination_Http
	//	*Destination_Amqp
	//	*Destination_Sqs
	//	*Destination_Kafka
	Dest                 isDestination_Dest `protobuf_oneof:"dest"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *Destination) Reset()         { *m = Destination{} }
func (m *Destination) String() string { return proto.CompactTextString(m) }
func (*Destination) ProtoMessage()    {}
func (*Destination) Descriptor() ([]byte, []int) {
	return fileDescriptor_a55fe39993114776, []int{0}
}

func (m *Destination) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Destination.Unmarshal(m, b)
}
func (m *Destination) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Destination.Marshal(b, m, deterministic)
}
func (m *Destination) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Destination.Merge(m, src)
}
func (m *Destination) XXX_Size() int {
	return xxx_messageInfo_Destination.Size(m)
}
func (m *Destination) XXX_DiscardUnknown() {
	xxx_messageInfo_Destination.DiscardUnknown(m)
}

var xxx_messageInfo_Destination proto.InternalMessageInfo

func (m *Destination) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Destination) GetType() Destination_Type {
	if m != nil {
		return m.Type
	}
	return Destination_UNSET
}

func (m *Destination) GetNotes() string {
	if m != nil {
		return m.Notes
	}
	return ""
}

func (m *Destination) GetCreatedBy() string {
	if m != nil {
		return m.CreatedBy
	}
	return ""
}

type isDestination_Dest interface {
	isDestination_Dest()
}

type Destination_Http struct {
	Http *destinations.HTTP `protobuf:"bytes,100,opt,name=http,proto3,oneof"`
}

type Destination_Amqp struct {
	Amqp *destinations.AMQP `protobuf:"bytes,101,opt,name=amqp,proto3,oneof"`
}

type Destination_Sqs struct {
	Sqs *destinations.SQS `protobuf:"bytes,102,opt,name=sqs,proto3,oneof"`
}

type Destination_Kafka struct {
	Kafka *destinations.Kafka `protobuf:"bytes,103,opt,name=kafka,proto3,oneof"`
}

func (*Destination_Http) isDestination_Dest() {}

func (*Destination_Amqp) isDestination_Dest() {}

func (*Destination_Sqs) isDestination_Dest() {}

func (*Destination_Kafka) isDestination_Dest() {}

func (m *Destination) GetDest() isDestination_Dest {
	if m != nil {
		return m.Dest
	}
	return nil
}

func (m *Destination) GetHttp() *destinations.HTTP {
	if x, ok := m.GetDest().(*Destination_Http); ok {
		return x.Http
	}
	return nil
}

func (m *Destination) GetAmqp() *destinations.AMQP {
	if x, ok := m.GetDest().(*Destination_Amqp); ok {
		return x.Amqp
	}
	return nil
}

func (m *Destination) GetSqs() *destinations.SQS {
	if x, ok := m.GetDest().(*Destination_Sqs); ok {
		return x.Sqs
	}
	return nil
}

func (m *Destination) GetKafka() *destinations.Kafka {
	if x, ok := m.GetDest().(*Destination_Kafka); ok {
		return x.Kafka
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*Destination) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*Destination_Http)(nil),
		(*Destination_Amqp)(nil),
		(*Destination_Sqs)(nil),
		(*Destination_Kafka)(nil),
	}
}

func init() {
	proto.RegisterEnum("events.Destination_Type", Destination_Type_name, Destination_Type_value)
	proto.RegisterType((*Destination)(nil), "events.Destination")
}

func init() { proto.RegisterFile("destination.proto", fileDescriptor_a55fe39993114776) }

var fileDescriptor_a55fe39993114776 = []byte{
	// 351 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x91, 0xdf, 0x4b, 0xeb, 0x30,
	0x14, 0xc7, 0xfb, 0x6b, 0xbb, 0x77, 0x67, 0x30, 0xba, 0xdc, 0xcb, 0xbd, 0x41, 0x10, 0xc6, 0x40,
	0x28, 0x38, 0x52, 0x98, 0x4f, 0x3e, 0x6e, 0xa8, 0x14, 0x86, 0xe2, 0xda, 0xfa, 0xe2, 0x8b, 0xa4,
	0x6d, 0xb6, 0x96, 0xb9, 0xa6, 0x5b, 0x32, 0xa1, 0x7f, 0xb3, 0xff, 0x84, 0x24, 0x9d, 0xb8, 0x8a,
	0x6f, 0xc9, 0xf9, 0x7c, 0x72, 0xf8, 0x9e, 0x13, 0x18, 0x66, 0x4c, 0xc8, 0xa2, 0xa4, 0xb2, 0xe0,
	0x25, 0xa9, 0xf6, 0x5c, 0x72, 0xd4, 0x65, 0x6f, 0xac, 0x94, 0xe2, 0xec, 0xff, 0x09, 0x12, 0x3e,
	0xdd, 0xee, 0xaa, 0x46, 0xf8, 0x06, 0x72, 0x29, 0x3f, 0xc1, 0xbf, 0x16, 0x10, 0x3b, 0x71, 0xac,
	0xe3, 0x56, 0x7d, 0x43, 0x57, 0x1b, 0xda, 0x90, 0xf1, 0xbb, 0x05, 0xfd, 0x9b, 0x2f, 0x88, 0x06,
	0x60, 0x15, 0x19, 0x36, 0x47, 0xa6, 0xd7, 0x0b, 0xad, 0x22, 0x43, 0x13, 0x70, 0x64, 0x5d, 0x31,
	0x6c, 0x8d, 0x4c, 0x6f, 0x30, 0xc5, 0xa4, 0x89, 0x46, 0x4e, 0x9e, 0x90, 0xb8, 0xae, 0x58, 0xa8,
	0x2d, 0xf4, 0x17, 0x3a, 0x25, 0x97, 0x4c, 0x60, 0x5b, 0x37, 0x68, 0x2e, 0xe8, 0x1c, 0x20, 0xdd,
	0x33, 0x2a, 0x59, 0xf6, 0x92, 0xd4, 0xd8, 0xd1, 0xa8, 0x77, 0xac, 0xcc, 0x6b, 0xe4, 0x81, 0xa3,
	0x46, 0xc0, 0xd9, 0xc8, 0xf4, 0xfa, 0x53, 0x44, 0x4e, 0xb3, 0x92, 0x20, 0x8e, 0x1f, 0x03, 0x23,
	0xd4, 0x86, 0x32, 0xd5, 0x16, 0x30, 0xfb, 0xc9, 0x9c, 0xdd, 0x2f, 0xb5, 0xa9, 0x0c, 0x74, 0x01,
	0xb6, 0xd8, 0x09, 0xbc, 0xd2, 0xe2, 0xb0, 0x2d, 0x46, 0xcb, 0x28, 0x30, 0x42, 0xc5, 0xd1, 0x25,
	0x74, 0xf4, 0x32, 0xf0, 0x5a, 0x8b, 0x7f, 0xda, 0xe2, 0x42, 0xa1, 0xc0, 0x08, 0x1b, 0x67, 0x7c,
	0x0d, 0x8e, 0x1a, 0x15, 0xf5, 0xa0, 0xf3, 0xf4, 0x10, 0xdd, 0xc6, 0xae, 0x81, 0x7e, 0x83, 0xa3,
	0x02, 0xba, 0xa6, 0x3a, 0xa9, 0x00, 0xae, 0x85, 0x7e, 0x81, 0x1d, 0x2d, 0x23, 0xd7, 0x56, 0xde,
	0x62, 0x76, 0xb7, 0x98, 0xb9, 0xce, 0xbc, 0x0b, 0x8e, 0xea, 0x3c, 0x27, 0xcf, 0x93, 0x75, 0x21,
	0xf3, 0x43, 0x42, 0x52, 0xbe, 0xf5, 0x13, 0x2a, 0xd3, 0x3c, 0xe5, 0xfb, 0xca, 0x17, 0x69, 0xce,
	0xb6, 0x54, 0xf8, 0xc9, 0xa1, 0x78, 0xcd, 0xfc, 0x35, 0xf7, 0x9b, 0x35, 0x27, 0x5d, 0xfd, 0x49,
	0x57, 0x1f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x54, 0x00, 0x72, 0xab, 0x25, 0x02, 0x00, 0x00,
}
