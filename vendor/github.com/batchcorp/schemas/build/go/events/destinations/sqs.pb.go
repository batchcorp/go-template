// Code generated by protoc-gen-go. DO NOT EDIT.
// source: events/destinations/sqs.proto

package destinations

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type SQS struct {
	QueueName            string            `protobuf:"bytes,1,opt,name=queue_name,json=queueName,proto3" json:"queue_name,omitempty"`
	DstAccountId         string            `protobuf:"bytes,2,opt,name=dst_account_id,json=dstAccountId,proto3" json:"dst_account_id,omitempty"`
	Metadata             map[string]string `protobuf:"bytes,3,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *SQS) Reset()         { *m = SQS{} }
func (m *SQS) String() string { return proto.CompactTextString(m) }
func (*SQS) ProtoMessage()    {}
func (*SQS) Descriptor() ([]byte, []int) {
	return fileDescriptor_45856fed13074a90, []int{0}
}

func (m *SQS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SQS.Unmarshal(m, b)
}
func (m *SQS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SQS.Marshal(b, m, deterministic)
}
func (m *SQS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SQS.Merge(m, src)
}
func (m *SQS) XXX_Size() int {
	return xxx_messageInfo_SQS.Size(m)
}
func (m *SQS) XXX_DiscardUnknown() {
	xxx_messageInfo_SQS.DiscardUnknown(m)
}

var xxx_messageInfo_SQS proto.InternalMessageInfo

func (m *SQS) GetQueueName() string {
	if m != nil {
		return m.QueueName
	}
	return ""
}

func (m *SQS) GetDstAccountId() string {
	if m != nil {
		return m.DstAccountId
	}
	return ""
}

func (m *SQS) GetMetadata() map[string]string {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func init() {
	proto.RegisterType((*SQS)(nil), "destinations.SQS")
	proto.RegisterMapType((map[string]string)(nil), "destinations.SQS.MetadataEntry")
}

func init() { proto.RegisterFile("events/destinations/sqs.proto", fileDescriptor_45856fed13074a90) }

var fileDescriptor_45856fed13074a90 = []byte{
	// 246 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x90, 0x41, 0x4b, 0xc3, 0x40,
	0x10, 0x85, 0x49, 0x83, 0x62, 0xd7, 0x2a, 0xb2, 0x78, 0x08, 0x42, 0xb1, 0x88, 0x87, 0x9e, 0xb2,
	0xa0, 0x17, 0x35, 0x27, 0x05, 0x0f, 0x1e, 0x14, 0xda, 0xdc, 0xbc, 0x84, 0xc9, 0xee, 0xd0, 0x2c,
	0x76, 0x77, 0xdb, 0xcc, 0x6c, 0xa1, 0xff, 0xcf, 0x1f, 0x26, 0xa6, 0x41, 0x2a, 0xf4, 0x36, 0xf3,
	0xcd, 0x1b, 0xde, 0xe3, 0x89, 0x31, 0x6e, 0xd0, 0x33, 0x29, 0x83, 0xc4, 0xd6, 0x03, 0xdb, 0xe0,
	0x49, 0xd1, 0x9a, 0xf2, 0x55, 0x1b, 0x38, 0xc8, 0xd1, 0x3e, 0xbf, 0xf9, 0x4e, 0x44, 0x5a, 0xce,
	0x4a, 0x39, 0x16, 0x62, 0x1d, 0x31, 0x62, 0xe5, 0xc1, 0x61, 0x96, 0x4c, 0x92, 0xe9, 0x70, 0x3e,
	0xec, 0xc8, 0x07, 0x38, 0x94, 0xb7, 0xe2, 0xdc, 0x10, 0x57, 0xa0, 0x75, 0x88, 0x9e, 0x2b, 0x6b,
	0xb2, 0x41, 0x27, 0x19, 0x19, 0xe2, 0xe7, 0x1d, 0x7c, 0x33, 0xb2, 0x10, 0x27, 0x0e, 0x19, 0x0c,
	0x30, 0x64, 0xe9, 0x24, 0x9d, 0x9e, 0xde, 0x5d, 0xe7, 0xfb, 0x6e, 0x79, 0x39, 0x2b, 0xf3, 0xf7,
	0x5e, 0xf1, 0xea, 0xb9, 0xdd, 0xce, 0xff, 0x1e, 0xae, 0x0a, 0x71, 0xf6, 0xef, 0x24, 0x2f, 0x44,
	0xfa, 0x85, 0xdb, 0x3e, 0xcb, 0xef, 0x28, 0x2f, 0xc5, 0xd1, 0x06, 0x96, 0x11, 0x7b, 0xf3, 0xdd,
	0xf2, 0x34, 0x78, 0x48, 0x5e, 0x8a, 0xcf, 0xc7, 0x85, 0xe5, 0x26, 0xd6, 0xb9, 0x0e, 0x4e, 0xd5,
	0xc0, 0xba, 0xd1, 0xa1, 0x5d, 0x29, 0xd2, 0x0d, 0x3a, 0x20, 0x55, 0x47, 0xbb, 0x34, 0x6a, 0x11,
	0xd4, 0x81, 0x6e, 0xea, 0xe3, 0xae, 0x98, 0xfb, 0x9f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x7c, 0x8a,
	0xa9, 0x15, 0x39, 0x01, 0x00, 0x00,
}
