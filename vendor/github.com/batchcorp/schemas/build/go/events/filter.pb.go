// Code generated by protoc-gen-go. DO NOT EDIT.
// source: filter.proto

package events

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Filter_Operator int32

const (
	Filter_EQUAL        Filter_Operator = 0
	Filter_NOT_EQUAL    Filter_Operator = 1
	Filter_GREATER_THAN Filter_Operator = 2
	Filter_LESS_THAN    Filter_Operator = 3
	Filter_CONTAINS     Filter_Operator = 4
	Filter_NOT_CONTAINS Filter_Operator = 5
)

var Filter_Operator_name = map[int32]string{
	0: "EQUAL",
	1: "NOT_EQUAL",
	2: "GREATER_THAN",
	3: "LESS_THAN",
	4: "CONTAINS",
	5: "NOT_CONTAINS",
}

var Filter_Operator_value = map[string]int32{
	"EQUAL":        0,
	"NOT_EQUAL":    1,
	"GREATER_THAN": 2,
	"LESS_THAN":    3,
	"CONTAINS":     4,
	"NOT_CONTAINS": 5,
}

func (x Filter_Operator) String() string {
	return proto.EnumName(Filter_Operator_name, int32(x))
}

func (Filter_Operator) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_1f5303cab7a20d6f, []int{0, 0}
}

type Filter struct {
	Operator             Filter_Operator `protobuf:"varint,1,opt,name=operator,proto3,enum=events.Filter_Operator" json:"operator,omitempty"`
	Subject              string          `protobuf:"bytes,2,opt,name=subject,proto3" json:"subject,omitempty"`
	Value                string          `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *Filter) Reset()         { *m = Filter{} }
func (m *Filter) String() string { return proto.CompactTextString(m) }
func (*Filter) ProtoMessage()    {}
func (*Filter) Descriptor() ([]byte, []int) {
	return fileDescriptor_1f5303cab7a20d6f, []int{0}
}

func (m *Filter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Filter.Unmarshal(m, b)
}
func (m *Filter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Filter.Marshal(b, m, deterministic)
}
func (m *Filter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Filter.Merge(m, src)
}
func (m *Filter) XXX_Size() int {
	return xxx_messageInfo_Filter.Size(m)
}
func (m *Filter) XXX_DiscardUnknown() {
	xxx_messageInfo_Filter.DiscardUnknown(m)
}

var xxx_messageInfo_Filter proto.InternalMessageInfo

func (m *Filter) GetOperator() Filter_Operator {
	if m != nil {
		return m.Operator
	}
	return Filter_EQUAL
}

func (m *Filter) GetSubject() string {
	if m != nil {
		return m.Subject
	}
	return ""
}

func (m *Filter) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func init() {
	proto.RegisterEnum("events.Filter_Operator", Filter_Operator_name, Filter_Operator_value)
	proto.RegisterType((*Filter)(nil), "events.Filter")
}

func init() { proto.RegisterFile("filter.proto", fileDescriptor_1f5303cab7a20d6f) }

var fileDescriptor_1f5303cab7a20d6f = []byte{
	// 243 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x3c, 0x90, 0xcf, 0x4e, 0x83, 0x40,
	0x10, 0xc6, 0xdd, 0x56, 0x10, 0x26, 0x68, 0xc8, 0xc6, 0x44, 0x8e, 0x4d, 0x4f, 0x3d, 0x98, 0xdd,
	0xc4, 0x3e, 0x01, 0x1a, 0xfc, 0x93, 0x34, 0x10, 0x01, 0x2f, 0x5e, 0x1a, 0x76, 0x1d, 0x0b, 0x86,
	0xba, 0x64, 0x59, 0xfa, 0xa4, 0x3e, 0x90, 0x81, 0x6d, 0x7b, 0xfc, 0x7d, 0xdf, 0x6f, 0x26, 0x99,
	0x81, 0xe0, 0xbb, 0x69, 0x0d, 0x6a, 0xd6, 0x69, 0x65, 0x14, 0x75, 0xf1, 0x80, 0xbf, 0xa6, 0x5f,
	0xfe, 0x11, 0x70, 0x9f, 0xa7, 0x82, 0xae, 0xc1, 0x53, 0x1d, 0xea, 0xca, 0x28, 0x1d, 0x91, 0x05,
	0x59, 0xdd, 0x3c, 0xdc, 0x31, 0x6b, 0x31, 0x6b, 0xb0, 0xec, 0x58, 0xe7, 0x67, 0x91, 0x46, 0x70,
	0xd5, 0x0f, 0xe2, 0x07, 0xa5, 0x89, 0x66, 0x0b, 0xb2, 0xf2, 0xf3, 0x13, 0xd2, 0x5b, 0x70, 0x0e,
	0x55, 0x3b, 0x60, 0x34, 0x9f, 0x72, 0x0b, 0x4b, 0x04, 0xef, 0xb4, 0x85, 0xfa, 0xe0, 0x24, 0xef,
	0x1f, 0xf1, 0x26, 0xbc, 0xa0, 0xd7, 0xe0, 0xa7, 0x59, 0xb9, 0xb5, 0x48, 0x68, 0x08, 0xc1, 0x4b,
	0x9e, 0xc4, 0x65, 0x92, 0x6f, 0xcb, 0xd7, 0x38, 0x0d, 0x67, 0xa3, 0xb0, 0x49, 0x8a, 0xc2, 0xe2,
	0x9c, 0x06, 0xe0, 0x3d, 0x65, 0x69, 0x19, 0xbf, 0xa5, 0x45, 0x78, 0x39, 0xea, 0xe3, 0xf4, 0x39,
	0x71, 0x1e, 0xd9, 0xe7, 0xfd, 0xae, 0x31, 0xf5, 0x20, 0x98, 0x54, 0x7b, 0x2e, 0x2a, 0x23, 0x6b,
	0xa9, 0x74, 0xc7, 0x7b, 0x59, 0xe3, 0xbe, 0xea, 0xb9, 0x18, 0x9a, 0xf6, 0x8b, 0xef, 0x14, 0xb7,
	0x07, 0x0a, 0x77, 0xfa, 0xca, 0xfa, 0x3f, 0x00, 0x00, 0xff, 0xff, 0xa0, 0xf8, 0x7d, 0x75, 0x25,
	0x01, 0x00, 0x00,
}
