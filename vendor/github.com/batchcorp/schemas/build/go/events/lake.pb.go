// Code generated by protoc-gen-go. DO NOT EDIT.
// source: lake.proto

package events

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Lake_Type int32

const (
	Lake_AWS Lake_Type = 0
)

var Lake_Type_name = map[int32]string{
	0: "AWS",
}

var Lake_Type_value = map[string]int32{
	"AWS": 0,
}

func (x Lake_Type) String() string {
	return proto.EnumName(Lake_Type_name, int32(x))
}

func (Lake_Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_54720e4be2d55b37, []int{1, 0}
}

type AWS struct {
	S3Bucket             string   `protobuf:"bytes,1,opt,name=s3_bucket,json=s3Bucket,proto3" json:"s3_bucket,omitempty"`
	Prefix               string   `protobuf:"bytes,2,opt,name=prefix,proto3" json:"prefix,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AWS) Reset()         { *m = AWS{} }
func (m *AWS) String() string { return proto.CompactTextString(m) }
func (*AWS) ProtoMessage()    {}
func (*AWS) Descriptor() ([]byte, []int) {
	return fileDescriptor_54720e4be2d55b37, []int{0}
}

func (m *AWS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AWS.Unmarshal(m, b)
}
func (m *AWS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AWS.Marshal(b, m, deterministic)
}
func (m *AWS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AWS.Merge(m, src)
}
func (m *AWS) XXX_Size() int {
	return xxx_messageInfo_AWS.Size(m)
}
func (m *AWS) XXX_DiscardUnknown() {
	xxx_messageInfo_AWS.DiscardUnknown(m)
}

var xxx_messageInfo_AWS proto.InternalMessageInfo

func (m *AWS) GetS3Bucket() string {
	if m != nil {
		return m.S3Bucket
	}
	return ""
}

func (m *AWS) GetPrefix() string {
	if m != nil {
		return m.Prefix
	}
	return ""
}

// A (data) lake indicates where collected events are stored.
//
// TODO: Fill out who produces and consumes this proto.
type Lake struct {
	Id   string    `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Type Lake_Type `protobuf:"varint,2,opt,name=type,proto3,enum=events.Lake_Type" json:"type,omitempty"`
	// Types that are valid to be assigned to Metadata:
	//	*Lake_Aws
	Metadata             isLake_Metadata `protobuf_oneof:"metadata"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *Lake) Reset()         { *m = Lake{} }
func (m *Lake) String() string { return proto.CompactTextString(m) }
func (*Lake) ProtoMessage()    {}
func (*Lake) Descriptor() ([]byte, []int) {
	return fileDescriptor_54720e4be2d55b37, []int{1}
}

func (m *Lake) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Lake.Unmarshal(m, b)
}
func (m *Lake) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Lake.Marshal(b, m, deterministic)
}
func (m *Lake) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Lake.Merge(m, src)
}
func (m *Lake) XXX_Size() int {
	return xxx_messageInfo_Lake.Size(m)
}
func (m *Lake) XXX_DiscardUnknown() {
	xxx_messageInfo_Lake.DiscardUnknown(m)
}

var xxx_messageInfo_Lake proto.InternalMessageInfo

func (m *Lake) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Lake) GetType() Lake_Type {
	if m != nil {
		return m.Type
	}
	return Lake_AWS
}

type isLake_Metadata interface {
	isLake_Metadata()
}

type Lake_Aws struct {
	Aws *AWS `protobuf:"bytes,100,opt,name=aws,proto3,oneof"`
}

func (*Lake_Aws) isLake_Metadata() {}

func (m *Lake) GetMetadata() isLake_Metadata {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (m *Lake) GetAws() *AWS {
	if x, ok := m.GetMetadata().(*Lake_Aws); ok {
		return x.Aws
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*Lake) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*Lake_Aws)(nil),
	}
}

func init() {
	proto.RegisterEnum("events.Lake_Type", Lake_Type_name, Lake_Type_value)
	proto.RegisterType((*AWS)(nil), "events.AWS")
	proto.RegisterType((*Lake)(nil), "events.Lake")
}

func init() { proto.RegisterFile("lake.proto", fileDescriptor_54720e4be2d55b37) }

var fileDescriptor_54720e4be2d55b37 = []byte{
	// 233 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x34, 0x8f, 0xbd, 0x4b, 0xc3, 0x40,
	0x18, 0xc6, 0x9b, 0x34, 0xc4, 0xf6, 0x2d, 0x54, 0xbd, 0x41, 0x02, 0x0e, 0x96, 0x80, 0xd0, 0x41,
	0xee, 0xa0, 0xd9, 0xdc, 0x9a, 0xc9, 0xc1, 0x29, 0x15, 0x0a, 0x2e, 0x72, 0x1f, 0xaf, 0xcd, 0x91,
	0xc6, 0x3b, 0x72, 0x17, 0xb5, 0xf8, 0xcf, 0x4b, 0xae, 0xe9, 0xf8, 0xf0, 0xfb, 0xbd, 0x1f, 0x0f,
	0xc0, 0x91, 0x37, 0x48, 0x6d, 0x67, 0xbc, 0x21, 0x29, 0x7e, 0xe3, 0x97, 0x77, 0xf9, 0x33, 0x4c,
	0xb7, 0xfb, 0x1d, 0xb9, 0x87, 0xb9, 0x2b, 0x3e, 0x44, 0x2f, 0x1b, 0xf4, 0x59, 0xb4, 0x8a, 0xd6,
	0xf3, 0x6a, 0xe6, 0x8a, 0x32, 0x64, 0x72, 0x07, 0xa9, 0xed, 0xf0, 0x53, 0xff, 0x66, 0x71, 0x20,
	0x63, 0xca, 0xff, 0x20, 0x79, 0xe5, 0x0d, 0x92, 0x25, 0xc4, 0x5a, 0x8d, 0x53, 0xb1, 0x56, 0xe4,
	0x11, 0x12, 0x7f, 0xb2, 0x18, 0xec, 0xe5, 0xe6, 0x96, 0x9e, 0x4f, 0xd1, 0xc1, 0xa5, 0x6f, 0x27,
	0x8b, 0x55, 0xc0, 0xe4, 0x01, 0xa6, 0xfc, 0xc7, 0x65, 0x6a, 0x15, 0xad, 0x17, 0x9b, 0xc5, 0xc5,
	0xda, 0xee, 0x77, 0x2f, 0x93, 0x6a, 0x20, 0xf9, 0x35, 0x24, 0x83, 0x4e, 0xae, 0xc2, 0x8f, 0x37,
	0x93, 0x12, 0x60, 0xd6, 0xa2, 0xe7, 0x8a, 0x7b, 0x5e, 0xd2, 0xf7, 0xa7, 0x83, 0xf6, 0x75, 0x2f,
	0xa8, 0x34, 0x2d, 0x13, 0xdc, 0xcb, 0x5a, 0x9a, 0xce, 0x32, 0x27, 0x6b, 0x6c, 0xb9, 0x63, 0xa2,
	0xd7, 0x47, 0xc5, 0x0e, 0x86, 0x9d, 0xf7, 0x8a, 0x34, 0xf4, 0x2e, 0xfe, 0x03, 0x00, 0x00, 0xff,
	0xff, 0x9e, 0x25, 0x3a, 0xef, 0x05, 0x01, 0x00, 0x00,
}
