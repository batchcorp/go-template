// Code generated by protoc-gen-go. DO NOT EDIT.
// source: manifest.proto

package events

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// This type is used during data collection -- the collector emits it to the
// inbound queue which is then consumed by the writer.
type Manifest struct {
	Batch                *Manifest_Batch  `protobuf:"bytes,1,opt,name=batch,proto3" json:"batch,omitempty"`
	Client               *Manifest_Client `protobuf:"bytes,2,opt,name=client,proto3" json:"client,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *Manifest) Reset()         { *m = Manifest{} }
func (m *Manifest) String() string { return proto.CompactTextString(m) }
func (*Manifest) ProtoMessage()    {}
func (*Manifest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0bb23f43f7afb4c1, []int{0}
}

func (m *Manifest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Manifest.Unmarshal(m, b)
}
func (m *Manifest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Manifest.Marshal(b, m, deterministic)
}
func (m *Manifest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Manifest.Merge(m, src)
}
func (m *Manifest) XXX_Size() int {
	return xxx_messageInfo_Manifest.Size(m)
}
func (m *Manifest) XXX_DiscardUnknown() {
	xxx_messageInfo_Manifest.DiscardUnknown(m)
}

var xxx_messageInfo_Manifest proto.InternalMessageInfo

func (m *Manifest) GetBatch() *Manifest_Batch {
	if m != nil {
		return m.Batch
	}
	return nil
}

func (m *Manifest) GetClient() *Manifest_Client {
	if m != nil {
		return m.Client
	}
	return nil
}

// Info indicating which team the inbound message belongs to,
// what collection config the writer should use and debug info.
type Manifest_Batch struct {
	Team                 *Team    `protobuf:"bytes,1,opt,name=team,proto3" json:"team,omitempty"`
	Collect              *Collect `protobuf:"bytes,2,opt,name=collect,proto3" json:"collect,omitempty"`
	Info                 *Info    `protobuf:"bytes,3,opt,name=info,proto3" json:"info,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Manifest_Batch) Reset()         { *m = Manifest_Batch{} }
func (m *Manifest_Batch) String() string { return proto.CompactTextString(m) }
func (*Manifest_Batch) ProtoMessage()    {}
func (*Manifest_Batch) Descriptor() ([]byte, []int) {
	return fileDescriptor_0bb23f43f7afb4c1, []int{0, 0}
}

func (m *Manifest_Batch) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Manifest_Batch.Unmarshal(m, b)
}
func (m *Manifest_Batch) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Manifest_Batch.Marshal(b, m, deterministic)
}
func (m *Manifest_Batch) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Manifest_Batch.Merge(m, src)
}
func (m *Manifest_Batch) XXX_Size() int {
	return xxx_messageInfo_Manifest_Batch.Size(m)
}
func (m *Manifest_Batch) XXX_DiscardUnknown() {
	xxx_messageInfo_Manifest_Batch.DiscardUnknown(m)
}

var xxx_messageInfo_Manifest_Batch proto.InternalMessageInfo

func (m *Manifest_Batch) GetTeam() *Team {
	if m != nil {
		return m.Team
	}
	return nil
}

func (m *Manifest_Batch) GetCollect() *Collect {
	if m != nil {
		return m.Collect
	}
	return nil
}

func (m *Manifest_Batch) GetInfo() *Info {
	if m != nil {
		return m.Info
	}
	return nil
}

// Normalized data we received from the client
// metadata contains transport data received from the messaging system (kafka, rmq, etc)
// payload contains a base64 encoded version of the payload the client sent to us
type Manifest_Client struct {
	Metadata             map[string]string `protobuf:"bytes,1,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Payload              []byte            `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Manifest_Client) Reset()         { *m = Manifest_Client{} }
func (m *Manifest_Client) String() string { return proto.CompactTextString(m) }
func (*Manifest_Client) ProtoMessage()    {}
func (*Manifest_Client) Descriptor() ([]byte, []int) {
	return fileDescriptor_0bb23f43f7afb4c1, []int{0, 1}
}

func (m *Manifest_Client) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Manifest_Client.Unmarshal(m, b)
}
func (m *Manifest_Client) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Manifest_Client.Marshal(b, m, deterministic)
}
func (m *Manifest_Client) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Manifest_Client.Merge(m, src)
}
func (m *Manifest_Client) XXX_Size() int {
	return xxx_messageInfo_Manifest_Client.Size(m)
}
func (m *Manifest_Client) XXX_DiscardUnknown() {
	xxx_messageInfo_Manifest_Client.DiscardUnknown(m)
}

var xxx_messageInfo_Manifest_Client proto.InternalMessageInfo

func (m *Manifest_Client) GetMetadata() map[string]string {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (m *Manifest_Client) GetPayload() []byte {
	if m != nil {
		return m.Payload
	}
	return nil
}

func init() {
	proto.RegisterType((*Manifest)(nil), "events.Manifest")
	proto.RegisterType((*Manifest_Batch)(nil), "events.Manifest.Batch")
	proto.RegisterType((*Manifest_Client)(nil), "events.Manifest.Client")
	proto.RegisterMapType((map[string]string)(nil), "events.Manifest.Client.MetadataEntry")
}

func init() { proto.RegisterFile("manifest.proto", fileDescriptor_0bb23f43f7afb4c1) }

var fileDescriptor_0bb23f43f7afb4c1 = []byte{
	// 319 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x91, 0xcd, 0x4a, 0x03, 0x31,
	0x14, 0x85, 0x99, 0x8e, 0x9d, 0xb6, 0xb7, 0xad, 0x4a, 0x10, 0x1d, 0xb2, 0x2a, 0x82, 0x50, 0xa1,
	0x24, 0x50, 0x37, 0xa2, 0x2b, 0x5b, 0x5c, 0xb8, 0xe8, 0x26, 0xb8, 0x72, 0x97, 0x49, 0xd3, 0x76,
	0x30, 0x3f, 0xa5, 0x93, 0x16, 0xfa, 0x02, 0x3e, 0x88, 0x4f, 0x2a, 0x93, 0x64, 0x84, 0x22, 0xee,
	0x92, 0x7b, 0xbe, 0x73, 0xe6, 0xdc, 0x09, 0x9c, 0x6b, 0x6e, 0xca, 0x95, 0xac, 0x1c, 0xd9, 0xee,
	0xac, 0xb3, 0x28, 0x93, 0x07, 0x69, 0x5c, 0x85, 0xc1, 0x49, 0xae, 0xc3, 0x0c, 0x0f, 0x85, 0x55,
	0x4a, 0x8a, 0x88, 0x60, 0x28, 0xcd, 0xca, 0x86, 0xf3, 0xed, 0x57, 0x0a, 0xdd, 0x45, 0x4c, 0x40,
	0x13, 0x68, 0x17, 0xdc, 0x89, 0x4d, 0x9e, 0x8c, 0x92, 0x71, 0x7f, 0x7a, 0x4d, 0x42, 0x16, 0x69,
	0x00, 0x32, 0xab, 0x55, 0x16, 0x20, 0x44, 0x21, 0x13, 0xaa, 0x94, 0xc6, 0xe5, 0x2d, 0x8f, 0xdf,
	0xfc, 0xc1, 0xe7, 0x5e, 0x66, 0x11, 0xc3, 0x07, 0x68, 0xfb, 0x00, 0x34, 0x82, 0xb3, 0xba, 0x5d,
	0xfc, 0xcc, 0xa0, 0xf1, 0xbd, 0x4b, 0xae, 0x99, 0x57, 0xd0, 0x3d, 0x74, 0x62, 0xe7, 0x18, 0x7e,
	0xd1, 0x40, 0xf3, 0x30, 0x66, 0x8d, 0x5e, 0x87, 0xd5, 0xfb, 0xe4, 0xe9, 0x69, 0xd8, 0x9b, 0x59,
	0x59, 0xe6, 0x15, 0xfc, 0x9d, 0x40, 0x16, 0xaa, 0xa0, 0x17, 0xe8, 0x6a, 0xe9, 0xf8, 0x92, 0x3b,
	0x9e, 0x27, 0xa3, 0x74, 0xdc, 0x9f, 0xde, 0xfd, 0xd3, 0x9a, 0x2c, 0x22, 0xf7, 0x6a, 0xdc, 0xee,
	0xc8, 0x7e, 0x6d, 0x28, 0x87, 0xce, 0x96, 0x1f, 0x95, 0xe5, 0x4b, 0x5f, 0x6d, 0xc0, 0x9a, 0x2b,
	0x7e, 0x86, 0xe1, 0x89, 0x09, 0x5d, 0x42, 0xfa, 0x29, 0x8f, 0x7e, 0xcd, 0x1e, 0xab, 0x8f, 0xe8,
	0x0a, 0xda, 0x07, 0xae, 0xf6, 0xd2, 0x5b, 0x7b, 0x2c, 0x5c, 0x9e, 0x5a, 0x8f, 0xc9, 0x8c, 0x7c,
	0x4c, 0xd6, 0xa5, 0xdb, 0xec, 0x0b, 0x22, 0xac, 0xa6, 0xfe, 0x0f, 0x0b, 0xbb, 0xdb, 0xd2, 0x4a,
	0x6c, 0xa4, 0xe6, 0x15, 0x2d, 0xf6, 0xa5, 0x5a, 0xd2, 0xb5, 0xa5, 0xa1, 0x6e, 0x91, 0xf9, 0xf7,
	0x7b, 0xf8, 0x09, 0x00, 0x00, 0xff, 0xff, 0x95, 0x9e, 0x1a, 0x36, 0x00, 0x02, 0x00, 0x00,
}
