// Code generated by protoc-gen-go. DO NOT EDIT.
// source: events/metrics/counter.proto

package metrics

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Counter_Type int32

const (
	Counter_UNSET      Counter_Type = 0
	Counter_COLLECTION Counter_Type = 1
	Counter_REPLAY     Counter_Type = 2
	Counter_STORAGE    Counter_Type = 3
)

var Counter_Type_name = map[int32]string{
	0: "UNSET",
	1: "COLLECTION",
	2: "REPLAY",
	3: "STORAGE",
}

var Counter_Type_value = map[string]int32{
	"UNSET":      0,
	"COLLECTION": 1,
	"REPLAY":     2,
	"STORAGE":    3,
}

func (x Counter_Type) String() string {
	return proto.EnumName(Counter_Type_name, int32(x))
}

func (Counter_Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_b78758d2d8a4fc21, []int{0, 0}
}

// Used for internal metrics collection with "mlib" library and metrics service.
type Counter struct {
	Id                   string       `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	TeamId               string       `protobuf:"bytes,2,opt,name=team_id,json=teamId,proto3" json:"team_id,omitempty"`
	Type                 Counter_Type `protobuf:"varint,3,opt,name=type,proto3,enum=metrics.Counter_Type" json:"type,omitempty"`
	Source               string       `protobuf:"bytes,4,opt,name=source,proto3" json:"source,omitempty"`
	Value                int64        `protobuf:"varint,5,opt,name=value,proto3" json:"value,omitempty"`
	Timestamp            int64        `protobuf:"varint,6,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *Counter) Reset()         { *m = Counter{} }
func (m *Counter) String() string { return proto.CompactTextString(m) }
func (*Counter) ProtoMessage()    {}
func (*Counter) Descriptor() ([]byte, []int) {
	return fileDescriptor_b78758d2d8a4fc21, []int{0}
}

func (m *Counter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Counter.Unmarshal(m, b)
}
func (m *Counter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Counter.Marshal(b, m, deterministic)
}
func (m *Counter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Counter.Merge(m, src)
}
func (m *Counter) XXX_Size() int {
	return xxx_messageInfo_Counter.Size(m)
}
func (m *Counter) XXX_DiscardUnknown() {
	xxx_messageInfo_Counter.DiscardUnknown(m)
}

var xxx_messageInfo_Counter proto.InternalMessageInfo

func (m *Counter) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Counter) GetTeamId() string {
	if m != nil {
		return m.TeamId
	}
	return ""
}

func (m *Counter) GetType() Counter_Type {
	if m != nil {
		return m.Type
	}
	return Counter_UNSET
}

func (m *Counter) GetSource() string {
	if m != nil {
		return m.Source
	}
	return ""
}

func (m *Counter) GetValue() int64 {
	if m != nil {
		return m.Value
	}
	return 0
}

func (m *Counter) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func init() {
	proto.RegisterEnum("metrics.Counter_Type", Counter_Type_name, Counter_Type_value)
	proto.RegisterType((*Counter)(nil), "metrics.Counter")
}

func init() { proto.RegisterFile("events/metrics/counter.proto", fileDescriptor_b78758d2d8a4fc21) }

var fileDescriptor_b78758d2d8a4fc21 = []byte{
	// 280 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x54, 0x90, 0xcf, 0x6a, 0xb3, 0x40,
	0x14, 0x47, 0xbf, 0x31, 0x89, 0xe2, 0xfd, 0x40, 0x64, 0xe8, 0x9f, 0x59, 0x64, 0x21, 0x59, 0xd9,
	0x8d, 0x03, 0x6d, 0xe9, 0xa2, 0xbb, 0x54, 0xa4, 0x04, 0x24, 0x16, 0x63, 0x17, 0xed, 0xa6, 0xe8,
	0x38, 0xc4, 0x81, 0x4c, 0x46, 0x9c, 0x31, 0x90, 0x07, 0xee, 0x7b, 0x94, 0xa8, 0x50, 0xba, 0x3c,
	0xe7, 0x5e, 0xce, 0xe2, 0x07, 0x4b, 0x7e, 0xe2, 0x47, 0xa3, 0xa9, 0xe4, 0xa6, 0x13, 0x4c, 0x53,
	0xa6, 0xfa, 0xa3, 0xe1, 0x5d, 0xd4, 0x76, 0xca, 0x28, 0xec, 0x4c, 0x7a, 0xf5, 0x8d, 0xc0, 0x89,
	0xc7, 0x13, 0xf6, 0xc0, 0x12, 0x35, 0x41, 0x01, 0x0a, 0xdd, 0xdc, 0x12, 0x35, 0xbe, 0x05, 0xc7,
	0xf0, 0x52, 0x7e, 0x89, 0x9a, 0x58, 0x83, 0xb4, 0x2f, 0xb8, 0xa9, 0xf1, 0x1d, 0xcc, 0xcd, 0xb9,
	0xe5, 0x64, 0x16, 0xa0, 0xd0, 0xbb, 0xbf, 0x8e, 0xa6, 0x58, 0x34, 0x85, 0xa2, 0xe2, 0xdc, 0xf2,
	0x7c, 0x78, 0xc1, 0x37, 0x60, 0x6b, 0xd5, 0x77, 0x8c, 0x93, 0xf9, 0x98, 0x18, 0x09, 0x5f, 0xc1,
	0xe2, 0x54, 0x1e, 0x7a, 0x4e, 0x16, 0x01, 0x0a, 0x67, 0xf9, 0x08, 0x78, 0x09, 0xae, 0x11, 0x92,
	0x6b, 0x53, 0xca, 0x96, 0xd8, 0xc3, 0xe5, 0x57, 0xac, 0x9e, 0x61, 0x7e, 0x29, 0x63, 0x17, 0x16,
	0xef, 0xdb, 0x5d, 0x52, 0xf8, 0xff, 0xb0, 0x07, 0x10, 0x67, 0x69, 0x9a, 0xc4, 0xc5, 0x26, 0xdb,
	0xfa, 0x08, 0x03, 0xd8, 0x79, 0xf2, 0x96, 0xae, 0x3f, 0x7c, 0x0b, 0xff, 0x07, 0x67, 0x57, 0x64,
	0xf9, 0xfa, 0x35, 0xf1, 0x67, 0x2f, 0x4f, 0x9f, 0x8f, 0x7b, 0x61, 0x9a, 0xbe, 0x8a, 0x98, 0x92,
	0xb4, 0x2a, 0x0d, 0x6b, 0x98, 0xea, 0x5a, 0xaa, 0x59, 0xc3, 0x65, 0xa9, 0x69, 0xd5, 0x8b, 0x43,
	0x4d, 0xf7, 0x8a, 0xfe, 0x9d, 0xad, 0xb2, 0x87, 0xbd, 0x1e, 0x7e, 0x02, 0x00, 0x00, 0xff, 0xff,
	0x70, 0xd7, 0x26, 0xc0, 0x4f, 0x01, 0x00, 0x00,
}
